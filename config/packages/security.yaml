security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: false
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        refresh:
            pattern:  ^/token/refresh
            stateless: true
            anonymous: true

        clothes_add_impact:
            pattern: ^/clothes/{clotheId}/add_impact
            security: false
            stateless: false

        register:
            pattern: ^/register
            stateless: true
            anonymous: true

        user_forgot_password:
            pattern: ^/users/forgot-password-request
            security: false

        user_reset_password:
            pattern: ^/users/reset-password
            stateless: true
            security: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        users:
            pattern: ^/users
            stateless: true
            security: true
            methods: [PUT, GET, DELETE]
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        api:
            pattern:   ^/
            stateless: true
            security: true
            methods: [PUT, POST, DELETE]
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        api_get:
            pattern:   ^/
            stateless: true
            security: true
            anonymous: true
            methods: [GET]
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/docs,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/users/forgot-password-request,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/users/reset-password,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/clothes,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/,       roles: IS_AUTHENTICATED_ANONYMOUSLY }
